<?xml version="1.0" encoding="UTF-8" ?>
<!--
status="warn" 日志框架本身的输出日志 级别
monitorInterval="5" 自动加载配置文件的间隔时间，不低于5秒
-->
<Configuration status="INFO" monitorInterval="5" strict="true" name="LogConfig">
    <!--
        集中配置属性进行管理：
        使用时通过：${name}

    -->
    <Properties>
        <Property name="LOG_HOME">D:\logs</Property>
    </Properties>

    <!--    日志处理-->
    <Appenders>
        <!--        控制台输出 appender-->
        <Console name="STDOUT" target="SYSTEM_OUT">
            <PatternLayout>
<!--                <Pattern>%d %-5p [%t] %-17c{2} %3x - %m %n</Pattern>-->
                <Pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36} - %m%n </Pattern>
            </PatternLayout>
        </Console>

        <!--        日志文件输出appender-->
        <File name="file"
              fileName="${LOG_HOME}/log4j2-file.log">
            <!--              filePattern="${LOG_HOME}/log4j2-file-%d{yyyy-MM-dd}.log.gz">-->

        </File>

        <!--        按照一定规则拆分的日志文件的 appender-->
        <RollingFile name="logService"
                     fileName="${LOG_HOME}/log4j2-rollingFile.log"
                     filePattern="${LOG_HOME}/$${date:yyyy-MM-dd}/log4j2-rollingFile-%d{yyyy-MM-dd-HH-mm}-%i.log.gz">
            <!--                     filePattern="${LOG_HOME}/log4j2-test-%d{yy-MM-dd}.log.gz">-->
            <!--            日志级别过滤器-->
            <ThresHoldFilter level="debug" onMatch="ACCEPT" onMisMatch="DENY"></ThresHoldFilter>

            <!--            日志消息格式-->
            <PatternLayout>
                <Pattern>%d %-5p [%t] %-17c{2} %3x - %m %n</Pattern>
            </PatternLayout>
            <Policies>
                <!--                系统启动时，触发拆分规则，产生一个新的日志文件-->
                <OnStartupTriggeringPolicy/>
                <!--                按照大小拆分 10MB-->
                <SizeBasedTriggeringPolicy size="10MB"/>
                <!--    按照时间节点拆分，规则 ${filePattern} 定义的            -->
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>

            </Policies>
            <!--            在同一个目录下，文件的个数限定为30个，超过进行覆盖-->
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <!--        使用随机读写流的日志文件输出 appender ，性能提高-->
        <RandomAccessFile name="randomAccessFile"
                          fileName="${LOG_HOME}/log4j2-access.log">
            <!--            filePattern="${LOG_HOME}/$${date:yyyy-MM-dd}/log4j2-access-%d{yy-MM-dd}.log.gz"-->

            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss.SSS}] [%-5level] %l %c{36} - %m%n"/>
        </RandomAccessFile>

<!--        &lt;!&ndash;        开启异步日志 AsyncAppender   &ndash;&gt;-->
<!--        <Async name="Async">-->
<!--            <AppenderRef ref="randomAccessFile"/>-->
<!--        </Async>-->
    </Appenders>

    <!--    logger 定义-->
    <Loggers>
        <Logger name="fileLogger" level="INFO" additivity="false">
            <AppenderRef ref="logService"/>
            <AppenderRef ref="STDOUT"/>
            <AppenderRef ref="file"/>
            <AppenderRef ref="randomAccessFile"/>
        </Logger>

        <!--        自定义异步logger 对象
                    includeLocation="false" 关闭日志记录的行号信息
                    additivity="false" 不再继承rootlogger对象
        -->
        <AsyncLogger name="cn.grady" level="trace" includeLocation="false" additivity="false">
            <AppenderRef ref="STDOUT"/>
        </AsyncLogger>

        <!--        默认使用rootLogger 配置，日志级别等-->
        <Root level="trace">

            <!--            使用指定的日志处理器-->
            <AppenderRef ref="STDOUT"/>
            <AppenderRef ref="Async"/>
            <!--            <AppenderRef ref="file"/>-->
            <!--            <AppenderRef ref="accessFile"/>-->
        </Root>
    </Loggers>

</Configuration>